<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="community">

	<resultMap type="community" id="communityMap">
		<result property="cmNo" column="CM_NO" />
		<result property="cmWriter" column="CM_WRITER" />
		<result property="cmLike" column="CM_LIKE" />
		<result property="cmView" column="CM_VIEW" />
		<result property="cmDate" column="CM_DATE" />
		<result property="cmTitle" column="CM_TITLE" />
		<result property="cmContent" column="CM_CONTENT" />
		<result property="cmThumbnail" column="CM_THUMBNAIL" />
		<result property="memNick" column="MEM_NICK" />
		<result property="memPro" column="MEM_PRO" />
		<result property="memNo" column="MEM_NO" />
	</resultMap>

	<resultMap type="boardReply" id="boardReplyMap">
		<result property="reply_id" column="REPLY_ID" />
		<result property="board_id" column="BOARD_ID" />
		<result property="parent_id" column="PARENT_ID" />
		<result property="depth" column="DEPTH" />
		<result property="reply_content" column="REPLY_CONTENT" />
		<result property="reply_writer" column="REPLY_WRITER" />
		<result property="register_datetime" column="REGISTER_DATETIME"
			typeHandler="dateStr" />
		<result property="com_reason" column="COM_REASON" />
		<result property="com_date" column="COM_DATE"
			typeHandler="dateStr" />
		<result property="com_status" column="COM_STATUS" />
		<result property="mem_nick" column="MEM_NICK" />
		<result property="mem_pro" column="MEM_PRO" />
	</resultMap>

  <!--  커뮤 글 등록 -->
	<insert id="insertCommunity" parameterType="community">
		INSERT INTO COMMUNITY
		VALUES('CM'||SEQ_CM_NO.NEXTVAL,#{cmWriter},#{cmLike},#{cmView},SYSDATE,#{cmTitle},#{cmContent},#{cmThumbnail})
	</insert>

    <!--  커뮤니티 게시글 목록 -->
	<select id="selectCommunityList" resultMap="communityMap">
		SELECT * FROM
		COMMUNITY CM
		LEFT JOIN MEMBER MB
		ON CM.CM_WRITER = MB.MEM_NO
		ORDER BY CM_DATE DESC
	</select>
	
	<!-- 커뮤니티 글 상세보기 -->
	<select id="selectCommunityOne" parameterType="string"
		resultMap="communityMap">
		SELECT * FROM
		COMMUNITY CM
		LEFT JOIN MEMBER MB
		ON CM.CM_WRITER = MB.MEM_NO
		WHERE CM_NO=#{cmNo}
	</select>

    <!-- 커뮤 글 삭제 -->
	<delete id="deleteCommunity" parameterType="string">
		DELETE FROM COMMUNITY
		WHERE CM_NO=#{cmNo}
	</delete>
    
    <!-- 커뮤 글 수정 -->
	<update id="updateCommunity" parameterType="community">
		UPDATE COMMUNITY SET
		CM_TITLE=#{cmTitle},CM_CONTENT=#{cmContent},
		WHERE CM_NO=#{cmNo}
	</update>
   
    <!-- 커뮤 조회수 증가 -->
	<update id="communityView" parameterType="string">
		UPDATE COMMUNITY SET
		CM_VIEW = CM_VIEW +1
		WHERE CM_NO =#{cmNo}
	</update>

	<select id="selectCount" resultType="_int">
		SELECT COUNT(*) FROM
		COMMUNITY
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="insertBoardReply" parameterType="hashmap">
		insert into board_reply(
		reply_id,
		board_id,
		parent_id,
		depth,
		reply_content,
		reply_writer,
		register_datetime
		)values(
		'REP'||SEQ_REPLY_ID.NEXTVAL,
		#{board_id},
		<if test='parent_id == null or parent_id ==" "'>
			NULL,
		</if>
		<if test='parent_id != null and parent_id!= " "'>
			#{parent_id},
		</if>
		#{depth},
		#{reply_content},
		#{reply_writer},
		SYSDATE
		)
	</insert>
	
	<!-- 커뮤니티 댓글 + 대댓글 목록 -->
	<select id="selectBoardReplyList" resultMap="boardReplyMap"
		parameterType="java.util.HashMap">
		select
		reply_id,
		board_id,
		parent_id,
		depth,
		reply_content,
		reply_writer,
		TO_CHAR(REGISTER_DATETIME,'YYYY-MM-DD HH24:MI:SS')AS REGISTER_DATETIME,
		mem_nick,
		mem_pro
		from
		board_reply br
		left join member mb
		on br.reply_writer = mb.mem_no
		where
		board_id = #{cmNo}
		order by reply_id
	</select>

   
	<select id="selectSeqReply" resultType="string">
		SELECT 'REP'||SEQ_REPLY_ID.CURRVAL FROM DUAL
	</select>

    
	<select id="selectBoardReplyOne" parameterType="string"
		resultMap="boardReplyMap">
		SELECT
		REPLY_ID,BOARD_ID,PARENT_ID,DEPTH,REPLY_CONTENT,REPLY_WRITER,
		TO_CHAR(REGISTER_DATETIME,'YYYY-MM-DD HH24:MI:SS')AS REGISTER_DATETIME,
		mem_nick,mem_pro
		FROM BOARD_REPLY BR
		LEFT JOIN MEMBER MB
		ON BR.REPLY_WRITER = MB.MEM_NO
		WHERE BR.REPLY_ID =#{reply_id}
	</select>

    <!--  댓글 삭제 -->
	<delete id="deleteReply" parameterType="string">
		delete
		from
		board_reply
		where
		reply_id = #{reply_id}
	</delete>

	<!-- 댓글 신고하기 -->
	<update id="reportReply" parameterType="boardReply">
	update board_reply 
	set
	reply_writer = #{reply_writer},
	com_reason = #{com_reason},
	com_status = #{com_status}
	where 
	reply_id = #{reply_id}
	</update>
	
	<!-- 관리자 댓글 목록 -->
	<select id="selectReplyList" resultMap="boardReplyMap">
		SELECT REPLY_WRITER,COM_REASON,REPLY_CONTENT,COM_DATE,COM_STATUS
		FROM BOARD_REPLY
		WHERE COM_STATUS IS NOT NULL
	</select>
	
	<!-- 관리자 댓글 신고 처리 -->
	<update id="warnMemberYn" parameterType="boardReply">
	update board_reply set
	com_status = #{com_status} where reply_writer=#{reply_writer}
	</update> 

   
   
  
</mapper>