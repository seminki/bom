<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <context:component-scan base-package="com.kh.bom" />
   
   <!--Ajax관련 - jackson converter등록   -->
   <beans:bean id="jacksonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
   <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
      <beans:property name="messageConverters">
         <beans:list>
            <beans:ref bean="jacksonConverter"/>
         </beans:list>
      </beans:property>
   </beans:bean>
   
   <!-- 파일데이터 처리하는 bean등록하기 -->
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="10485760"/>
   </beans:bean>

  <!-- 인터셉터설정하기 -->
	<interceptors>
	 <interceptor>
	<mapping path="/community/*"/>
	<beans:bean id="loginCheck" class="com.kh.bom.common.interceptor.LoginCheckInterceptor"/>
	</interceptor>
		 <interceptor>
			<mapping path="/community/*"/>
			<mapping path="/mypage/*"/>
			<beans:bean id="memWarnCheck" class="com.kh.bom.common.interceptor.memberWarnInterceptor"/>
		</interceptor> 
		<interceptor>
			<mapping path="/admin/*"/>
			<beans:bean id="adminCheck" class="com.kh.bom.common.interceptor.AdminCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- jsonview연결 resolver등록하기  : 리턴값이랑 일치하는 이름을 가진 빈 을 찾아 실행시킴-->
  	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/> 	
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>

   

   <!-- redirect:/시 뒤로가도 정보 없도록 캐쉬지우기 ??  -->
<!--    <interceptors>
      <interceptor>
          <mapping path="/*/member/deleteMember" />
          <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
            <beans:property name="cacheSeconds" value="0" />
            <beans:property name="useExpiresHeader" value="true" />
            <beans:property name="useCacheControlHeader" value="true" />
            <beans:property name="useCacheControlNoStore" value="true" />
          </beans:bean>
      </interceptor>   
   </interceptors>  -->
   
   <!-- 웹소켓 핸들러 -->
   <beans:bean id="EhcoHandler" class="com.kh.bom.websocket.EchoHandler"/>
   <websocket:handlers>
   		<websocket:mapping handler="EhcoHandler" path="/replyEcho"/>
   		<websocket:handshake-interceptors>
   			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
   		</websocket:handshake-interceptors>
   		
   		<websocket:sockjs/>
   </websocket:handlers>
   
   <!-- 구글 -->
   	<beans:bean id="googleClientID" class="java.lang.String">
	        <beans:constructor-arg 
	        value="672682480913-i9edl0mslpr3f7v8bdmquu01hfqhmg1u.apps.googleusercontent.com" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="OIg8V6q6WZvLTk5HyEdlAovc" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
	        <!-- <beans:constructor-arg value="http://localhost:9090/bom/auth/google/callback" /> -->
	        <beans:constructor-arg value="http://rclass.iptime.org:9999/bom/auth/google/callback" />
	</beans:bean>
	    
	<beans:bean id="googleSns" class="com.kh.bom.member.model.vo.SnsValue">
	        <beans:constructor-arg value="google" />
	        <beans:constructor-arg ref="googleClientID" />
	        <beans:constructor-arg ref="googleClientSecret" />
	        <beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	
	<beans:bean id="googleConnectionFactory"       
	                                 class="org.springframework.social.google.connect.GoogleConnectionFactory">
	<beans:constructor-arg ref="googleClientID" />
	<beans:constructor-arg ref="googleClientSecret" />
	</beans:bean>
	    
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	       	<beans:property name="scope" value='https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email '/> 
	        <beans:property name="redirectUri" ref="googleRedirectUrl"/>
	</beans:bean>	
   
   <!-- 네이버 -->
	<beans:bean id="naverClientID" class="java.lang.String">
	        <beans:constructor-arg value="gkPd1hjxhxsXCZPFCG63" />
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="d99avVPdGJ" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
	       <!--  <beans:constructor-arg value="http://localhost:9090/bom/auth/naver/callback" /> -->
	        <beans:constructor-arg value="http://rclass.iptime.org:9999/bom/auth/naver/callback" />
	</beans:bean>
	    
	<beans:bean id="naverSns" class="com.kh.bom.member.model.vo.SnsValue">
	        <beans:constructor-arg value="naver" />
	        <beans:constructor-arg ref="naverClientID" />
	        <beans:constructor-arg ref="naverClientSecret" />
	        <beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
   

</beans:beans>